<?xml version="1.0" encoding="UTF-8"?>
<!--scan为true，配置文件发生改变，将会重新加载，默认为true-->
<!--scanPeriod监测配置文件是否有修改的时间间隔，默认单位是毫秒，一分钟-->
<!--debug打印出logback内部日志，默认false-->
<!--contextName上下文名字-->
<!--properties定义属性-->
<configuration scan='true' scanPeriod="60 seconds" debug="false">
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
	<property name="App_Name" value="log"/>
	<contextName>${App_Name}</contextName>

	<!-- 控制台输出 -->
	<!--appender在logback中用于具体记录日志的组件-->
	<!--name指定受此log约束的某一个包或具体的一个类-->
	<!--class使用的appender的类-->
	<!--encoder输出格式-->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] %-40logger -- [%-40class] -- [%method] : %msg%n</pattern>
		</encoder>
	</appender>

	<!-- 按照每天生成日志文件 -->
	<appender name="RFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名-->
			<FileNamePattern>%d{yyyy-MM-dd}.log</FileNamePattern>
			<!--日志文件保留天数-->
			<MaxHistory>30</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] %-40logger -- [%-40class] -- [%method] : %msg%n</pattern>
		</encoder>
		<!--日志文件最大的大小-->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
	</appender>

	<!--root根配置，level指定日志级别-->
	<root level="INFO">
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="RFILE"/>
	</root>
</configuration>